import Preview from './Preview'

function Main() {
  return (
    <div id="main">
      <Preview index='0' title="Wall Art Works" technos={['Ruby', 'Rails', 'PostgreSQL', 'pagy', 'geocoder', 'devise', 'omniauth', 'pg_search', 'rails_admin', 'stripe', 'cloudinary', 'ransack', 'bootstrap', 'docker', 'ovh', 'ngrok', 'scss' ]} description="Commencé comme un projet visant à créer un modèle e-commerce personnalisable, ce projet a évolué pour devenir un site web marchand spécialisé dans la vente de tableaux générés par intelligence artificielle. Temporairement hébergée sur un VPS après la dockerisation, l'application, une fois en ligne, a été négligée en termes de suivi et de maintenance. Les contraintes techniques liées à la pixelisation des images générées à cette période ont provisoirement mis fin à cette aventure. Notre objectif n'était pas de commercialiser des œuvres dont la résolution DPI serait insuffisante une fois imprimée en grand format." inclus={["CRUD Complet", "Hebergement d'image dans le cloud", "Authentification (notamment via omniAuth google facebook)", "Stripe", "barre de recherche", "tableau de bord administrateur", "formulaire de contact", "geolocalisation", "previsualisation virtuelle d'environnement", "gestion du panier", "interface de paiement externalisé"]} gitlink='https://github.com/marionrobert/waw'/>

      <Preview index='1' title="Events Billetterie" technos={['React', 'Node', 'Javascript', 'SQL', 'vite', 'redux', 'stripe', 'axios', 'qrcode', 'lazyloading', 'leaflet', 'scss', 'bcrypt', 'nodemailer', 'mysql']} description="Ce projet a été réalisé dans le cadre d'une soutenance pour l'obtention d'une certification RNCP. Cette application permet à un administrateur, reconnu par un système d'authentification, de proposer des événements tels que des spectacles, des concerts en intérieur, et de vendre un certain nombre de places pour différentes dates. L'utilisateur, quant à lui, a la possibilité de choisir sur un plan de salle le ou les sièges qui lui conviennent, tout en étant informé en temps réel des sièges déjà achetés par d'autres clients. Une fois l'achat confirmé, le client reçoit un mail automatique contenant un lien et un QRCode généré automatiquement, lui permettant de le présenter à l'entrée de l'événement pour le contrôle. L'administrateur, quant à lui, a accès à un lecteur de QRCode directement relié à la base de données, avec différents types de scans possibles. Il lui est notamment possible de vérifier si le QRCode est viable, falsifié, ou s'il a déjà été précédemment scanné, évitant ainsi qu'il ne soit utilisé deux fois."  inclus={["Gestion des utilisateurs", "Zone administrateur", "CRUD Complet", "gestion du panier via localstorage", "base de donnée Node/SQL hebergé sur PhpMyAdmin", "lecteur intégré de QRcode", "generateur de QRcode unique", "interface de paiement intégrée à l'application", "geolocalisation", "affichage dynamique" ]} gitlink='https://github.com/AurelienPREVOST/billetterie_front'/>
      
      <Preview index='2' title="Unreal Engine Projects" technos={['Unreal Engine 4.27.2', 'Unreal Engine 5.2.3']} description="Puisque le développement ne se limite pas au Web et ne se réduit pas au ''simple'' codage, j'ai décidé d'apprendre l'Unreal Engine à travers ses versions 4 et 5. Ce moteur graphique est actuellement l'un des logiciels les plus puissants et polyvalents au monde, couvrant les domaines d'application tels que le jeu vidéo, la conception 3D, l'architecture 3D, le cinéma et l'animation. Devenant de plus en plus incontournable, sa technologie de code Low-Code, qui permet la manipulation via des nœuds de briques de code préétablies en C++, en fait un outil de développement rapide, fiable et extrêmement puissant."   inclus={['TopDownShooter', 'Multijoueur', 'VR', '2d/3d Plateforme']}/>
    </div>
  )
}

export default Main


 